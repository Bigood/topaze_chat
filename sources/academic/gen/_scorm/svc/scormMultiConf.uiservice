<?xml version="1.0" encoding="UTF-8"?>
<sm:freeUiService xmlns:sc="http://www.utc.fr/ics/scenari/v3/core" xmlns:sm="http://www.utc.fr/ics/scenari/v3/modeling" code="scormMultiConf" info="XscormMultiConf">
	<sm:scriptAfterLinksForDeclaringService>// Paramétrage du service completionStorage :
//   - "completed" SSi un score est affecté pour les assmntUa
//   - pas de commit auto sur un changement de valeur
scServices.completionStorage.getCurrentCompletionStatus = function(){
	if(scServices.completionStorage._xIsAssmntUa){
		if(scServices.scorm2k4 &amp;&amp; scServices.scorm2k4.isScorm2k4Active()) {
			var vApi = scServices.scorm2k4.getScorm2k4API();
			return (vApi.GetValue("cmi.score.scaled")!=null &amp;&amp; vApi.GetValue("cmi.score.scaled")!=="") ? "completed" : "incomplete" ;
		} else if(scServices.scorm12 &amp;&amp; scServices.scorm12.isScorm12Active()) {
			var vApi = scServices.scorm12.getScorm12API();
			return (vApi.LMSGetValue("cmi.core.score.raw")!=null &amp;&amp; vApi.LMSGetValue("cmi.core.score.raw")!=="") ? "completed" : "incomplete" ;
		}
	}else
		return "completed";
}
scServices.completionStorage._SendDataOnSave = false;

// Paramétrage du service exitModeStorage:
//   - pas de commit auto sur un changement de valeur
scServices.exitModeStorage._SendDataOnTerminate = false;
//   - exit : "suspend" quand le parcours du SCO n’est pas complet, et "" (terminé) quand le parcours du SCO est complet
scServices.exitModeStorage.getExitMode = function(){
	return scServices.completionStorage.getCurrentCompletionStatus()=="completed" ? "" : "suspend" ;
}

// Paramétrage du service suspendDataStorage :
//   - pas de commit sur le changement de page des assmnts
scServices.suspendDataStorage._SendDataOnSave=false

// Paramétrage du service assmntMgr:
//   - pas de commit sur le changement de page des assmnts
scServices.assmntMgr._SendDataOnSave = false;</sm:scriptAfterLinksForDeclaringService>
</sm:freeUiService>